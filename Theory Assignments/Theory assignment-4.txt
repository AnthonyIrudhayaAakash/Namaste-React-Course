1)Is JSX mandatory for React?

	->"JSX" is not mandatory for React.->"JSX" stands for "JavaScript XML".
	->"JSX" is JavaScript syntax extension which can have HTML like code within it(but not exact HTML) commonly used with React.
	->"JSX" is used to write the code for creating a React Element in a convenient way.Instead of using "React.createElement()" to
	   create a react element , we use "JSX" element to create it.We must declare JSX element with Capital Letter or else React 	  	   consider it as a "HTML" element which make a issue in displaying Component in UI

	Ex: const header = () =>{
		return ( 
			<div>
			  <h1>Hello World</h1>
			</div>
		);

2)Is ES6 mandatory for React?

	->ES6 is not mandatory for React. but it is highly recommended to use React with ES6 which latest standerd version.
	->ES6 also introduced enhancement like arrow function , let&const,Template literals ,Destructuring etc..
	->Without ES6, We used React by Class components where in ES6 We are preferring "Functional components" likewise 
	 there is some key difference in using React with older version and "ES6".
3){TitleComponent} vs {<TitleComponent/>} vs
{<TitleComponent></TitleComponent>} in JSX

	->{TitleComponent}:

		This syntax is used when you want to include the content of the TitleComponent directly. It assumes that TitleComponent is 		a valid JSX element or a string.

	->{<TitleComponent/>}:

		This syntax is equivalent to the previous one and is commonly used when you want to wrap your component in a parent 			element.

	->{<TitleComponent></TitleComponent>}

		This is another way to express a JSX element and is functionally equivalent to the previous examples. It explicitly 			defines the opening and closing tags for TitleComponent.

4)How can I write comments in JSX?

	->In JSX , We can write comments by wrapping up the commenting statement within curly braces and comment symbols "{/*...*/}
		ex:const MasterLayout = () =>{
    			return (
        			<div className="MasterContainer">
            				{/* Header */}
        			</div>
    				)
		   }

5)What is <React.Fragment></React.Fragment> and <></> ?

	-> It is a Fragment Syntax. We use this to wrap or group multiple elements into single wrap  without create extra node in DOM.
	-> "<></>" is a shorthand syntax for <React.Fragment></React.Fragment>. We can also use " <Fragment></Fragment>.

6)What is Virtual DOM?

	->The Virtual DOM is a concept used by React to optimize the updating of the User Interface(UI) in Web Application.
	->"VDOM" is a lightweight, in-memory representation of real DOM elements in a tree like structure to optimzie the updates
	  in webpage faster.
6)What is Reconcilation Algorithm?

	->Reconciliation in React refers to the process of updating the virtual DOM to reflect changes in the underlying state or props of 	  a component. 
	->The reconciliation process involves comparing the new virtual DOM tree with the previous one and figuring out the minimum number 	  of DOM operations needed to update the actual DOM. 
7)What is React Fiber ?

	->React Fiber is a set of internal algorithm or ongoing implementation in core algorithm which introduced in React 16 version to 	  improve rendering and executing of React Components much faster. It also in motive to ease the animation and responsive 	        	  design.

8)Why we need keys in React?When do we need keys in React?

	->We user keys in React to identify the new elements and existing elements in a Webpage to identify and render the new components 
	  which help us to provide UI components without wrong data.

	->Whenever we are rendering a single component with different data which can have different data from each other, we should 		 able to identify the each component with unique keys to update that element later.so We are using keys.

9)Can we use Index as keys in React?

	->We have that possiblity to use index as keys in React.But Using Index as keys are not suggested which have cause big issues.
	->Consider a situation, If you are having 3 elements , you have removed 2 elements and added 2 new elements . But even after 	   	  having changes in Components still we have 3 elements and same index number . so react won't make any changes in webpage it 		  still apply old data to new components.This makes a big issue in User Experience and provide wrong information.

10)What is props in React?

	->"props" stands for "properties" are like arguments in JS.
	->It is passed via attributes to a react components to make the React component for dynamic usage.Like the component which receive 	 "props" acts like a  function reprsent data as per receiving from prop.
	->When we want to pass some data dynamically, we pass it as props.

11)What is Config Driven UI?

	->Config Driven UI : UI components in a website is controlled by config which are all fetched from Backend by API . It helps to 	  manage our webpage using Data. For example, "A website won't have same set of details, offers for all location and all people , 	  these are all managed by Config Driven UI". 
